package com.example.screeningexcerciseepifi.auth.domainimport com.example.screeningexcerciseepifi.auth.models.ValidateResultimport java.util.regex.Matcherimport java.util.regex.Patternclass PanValidatorUseCase {    operator fun invoke(panCardNumber: String):Result<ValidateResult> {        val regex = "[A-Z]{5}[0-9]{4}[A-Z]{1}"        val pattern: Pattern = Pattern.compile(regex)        val matcher: Matcher = pattern.matcher(panCardNumber)        if(panCardNumber.isBlank()){            return Result.Error(                    error = "PAN number should not be empty"            )        }        else if(!matcher.matches()){            return Result.Error(                    error = "PAN number is not in valid format"            )        }        else {            return Result.Success(                    ValidateResult(                            isSuccessful = true                    )            )        }    }}